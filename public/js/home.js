// –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º–∏ (–ø–æ—à—É–∫ –º—ñ—Å—Ü—å)
document.querySelector("form").addEventListener("submit", function (e) {
  e.preventDefault(); // –í—ñ–¥–º—ñ–Ω—è—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É —Ñ–æ—Ä–º–∏ (–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏)
  searchPlaces(); // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø–æ—à—É–∫—É –º—ñ—Å—Ü—å
});

// –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –≤—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫ –≤–∫–ª–∞–¥–æ–∫
document.querySelectorAll(".tab-button").forEach(button => {
  button.addEventListener("click", function () {
    // –í–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å "active" —É –≤—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫ —ñ –ø–∞–Ω–µ–ª–µ–π –≤–∫–ª–∞–¥–æ–∫
    document.querySelectorAll(".tab-button").forEach(btn => btn.classList.remove("active"));
    document.querySelectorAll(".tab-panel").forEach(panel => panel.classList.remove("active"));

    // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å "active" –ª–∏—à–µ –¥–ª—è –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ—ó –∫–Ω–æ–ø–∫–∏ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó –ø–∞–Ω–µ–ª—ñ
    this.classList.add("active");
    document.getElementById(this.dataset.tab).classList.add("active");

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—à—É–∫ –º—ñ—Å—Ü—å –¥–ª—è –æ–±—Ä–∞–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    searchPlaces();
  });
});

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–≤—Ç–æ–¥–æ–ø–æ–≤–Ω–µ–Ω–Ω—è
const locationInput = document.querySelector("#location");
const dropdown = document.querySelector("#autocomplete-dropdown");

locationInput.addEventListener("input", async () => {
  const query = locationInput.value.trim();
  if (query.length < 1) {
    dropdown.style.display = "none";
    return;
  }

  // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  dropdown.innerHTML = "<div style='padding: 8px;'>üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>";
  dropdown.style.display = "block";

  try {
    const response = await fetch(`/search/autocomplete?query=${encodeURIComponent(query)}`);
    const suggestions = await response.json();

    dropdown.innerHTML = "";
    if (suggestions.length === 0) {
      dropdown.style.display = "none";
      return;
    }

    suggestions.forEach(suggestion => {
      const item = document.createElement("div");
      item.textContent = suggestion.description;
      item.addEventListener("click", () => {
        locationInput.value = suggestion.description;
        dropdown.style.display = "none";
        searchPlaces();
      });
      dropdown.appendChild(item);
    });

    dropdown.style.display = "block";
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–¥–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:", error);
    dropdown.innerHTML = "<div style='padding: 8px; color: red;'>‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ</div>";
  }
});

// –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –¥—Ä–æ–ø–¥–∞—É–Ω –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–∏–º
document.addEventListener("click", (e) => {
  if (!locationInput.contains(e.target) && !dropdown.contains(e.target)) {
    dropdown.style.display = "none";
  }
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ—à—É–∫—É –º—ñ—Å—Ü—å —á–µ—Ä–µ–∑ API
function searchPlaces() {
  let location = document.querySelector("#location").value.trim(); // –û—Ç—Ä–∏–º—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ª–æ–∫–∞—Ü—ñ—ó –∑ –ø–æ–ª—è –≤–≤–æ–¥—É
  let activeTabButton = document.querySelector(".tab-button.active"); // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–∫—Ç–∏–≤–Ω—É –≤–∫–ª–∞–¥–∫—É
  let category = activeTabButton ? activeTabButton.getAttribute("data-category") : "lodging"; // –û—Ç—Ä–∏–º—É—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º "lodging")
  // –ü–æ–∫–∞–∑—É—î–º–æ loading
  const loading = document.querySelector(`#${activeTabButton.dataset.tab} .loading`);
  const container = document.querySelector(`#${activeTabButton.dataset.tab}-list`);
  if (loading && container) {
    loading.style.display = "block";
    container.innerHTML = ""; // –æ—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
  }
  // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –º—ñ—Å—Ü—å
  fetch(`/search/search-places?location=${encodeURIComponent(location)}&category=${category}`)
    .then(response => response.json()) // –†–æ–∑–±–∏—Ä–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    .then(places => {
      const container = document.querySelector(`#${activeTabButton.dataset.tab}-list`); // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º—ñ—Å—Ü—å
      if (!container) return;
      if (loading) loading.style.display = "none";

      container.innerHTML = ""; // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º

      if (places.error) {
        container.innerHTML = `<p>${places.error}</p>`; // –í–∏–≤–æ–¥–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –º—ñ—Å—Ü—å –Ω–µ–º–∞—î
        return;
      }

      // –ü—Ä–æ—Ö–æ–¥–∏–º–æ –ø–æ –∫–æ–∂–Ω–æ–º—É –∑–Ω–∞–π–¥–µ–Ω–æ–º—É –º—ñ—Å—Ü—é —Ç–∞ —Å—Ç–≤–æ—Ä—é—î–º–æ HTML-–µ–ª–µ–º–µ–Ω—Ç
      places.forEach(place => {
        const formattedAddress = formatAddress(place.address); // –§–æ—Ä–º–∞—Ç—É—î–º–æ –∞–¥—Ä–µ—Å—É
        const card = document.createElement("div"); // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º—ñ—Å—Ü—è
        card.classList.add("card"); // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—ó

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É "–î–æ–¥–∞—Ç–∏ –≤ –ø–ª–∞–Ω"
        const btnAddToPlan = document.createElement("button");
        btnAddToPlan.classList.add("btn-secondary");
        btnAddToPlan.textContent = "+ –≤ –ø–ª–∞–Ω";

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–¥–∞—Ç–∏ –≤ –ø–ª–∞–Ω"
        btnAddToPlan.addEventListener("click", async () => {
          try {
            const response = await fetch("/add-to-plan", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                photoUrl: place.photoUrl,
                name: place.name,
                address: formattedAddress,
              }),
            });

            const result = await response.json(); // –û—Ç—Ä–∏–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞

            if (response.ok) {
              alert("–î–æ–¥–∞–Ω–æ –≤ –ø–ª–∞–Ω!"); // –Ø–∫—â–æ —É—Å–ø—ñ—à–Ω–æ - –≤–∏–≤–æ–¥–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            } else {
              alert("–£–≤—ñ–π–¥—ñ—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É"); // –í–∏–≤–æ–¥–∏–º–æ –ø–æ–º–∏–ª–∫—É
            }
          } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É:", error);
            if (loading) loading.style.display = "none";
            alert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
          }
        });

        // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –∫–∞—Ä—Ç–∫—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –º—ñ—Å—Ü–µ
        card.innerHTML = `
          <img src="${place.photoUrl}" alt="${place.name}" onerror="this.src='/images/placeholder.png'"> 
          <h3>${place.name}</h3>
          <p>${formattedAddress}</p>
          <p>–†–µ–π—Ç–∏–Ω–≥: ${place.rating || "–ù–µ–º–∞—î —Ä–µ–π—Ç–∏–Ω–≥—É"} (${place.totalRatings || 0} –≤—ñ–¥–≥—É–∫—ñ–≤)</p>
        `;

        card.appendChild(btnAddToPlan); // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–î–æ–¥–∞—Ç–∏ –≤ –ø–ª–∞–Ω" —É –∫–∞—Ä—Ç–∫—É
        container.appendChild(card); // –î–æ–¥–∞—î–º–æ –∫–∞—Ä—Ç–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      });
    })
    .catch(error => console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:", error)); // –í–∏–≤–æ–¥–∏–º–æ –ø–æ–º–∏–ª–∫—É
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∞–¥—Ä–µ—Å–∏ (–∑–∞–ª–∏—à–∞—î —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à—ñ –¥–≤–∞ –µ–ª–µ–º–µ–Ω—Ç–∏, —â–æ–± –Ω–µ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —ñ–Ω–¥–µ–∫—Å, –∫—Ä–∞—ó–Ω—É —ñ —Ç–ø.)
function formatAddress(fullAddress) {
  const parts = fullAddress.split(", "); // –†–æ–∑–±–∏–≤–∞—î–º–æ –∞–¥—Ä–µ—Å—É –ø–æ –∫–æ–º–∞—Ö
  return parts.length >= 3 ? `${parts[0]}, ${parts[1]}` : fullAddress; // –Ø–∫—â–æ —î —Ö–æ—á–∞ –± 3 —á–∞—Å—Ç–∏–Ω–∏, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–µ—Ä—à—ñ –¥–≤—ñ
}